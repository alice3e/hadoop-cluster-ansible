---
- name: Update linux apt
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: yes

- name: Ensure hadoop user exists
  user:
    name: hadoop
    comment: "Hadoop service account"
    shell: /bin/bash
    create_home: yes
    groups: sudo
    state: present
  become: yes

- name: Ensure .ssh directory for hadoop user
  file:
    path: "/home/hadoop/.ssh"
    state: directory
    owner: hadoop
    group: hadoop
    mode: '0700'
  become: yes

- name: Install master's public key for hadoop user
  authorized_key:
    user: hadoop
    key: "{{ lookup('file', 'roles/common/files/ssh/hadoop-key.pub') }}"
    state: present
  become: yes

- name: Ensure authorized_keys permissions
  file:
    path: "/home/hadoop/.ssh/authorized_keys"
    owner: hadoop
    group: hadoop
    mode: '0600'
  become: yes

- name: Allow passwordless sudo for hadoop user
  copy:
    content: "hadoop ALL=(ALL) NOPASSWD:ALL\n"
    dest: /etc/sudoers.d/hadoop
    owner: root
    group: root
    mode: '0440'
  become: yes

- name: Disable StrictHostKeyChecking for local hadoop user SSH (optional)
  blockinfile:
    path: "/home/hadoop/.ssh/config"
    create: yes
    owner: hadoop
    group: hadoop
    mode: '0600'
    block: |
      Host *
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
  become: yes

- name: Install required packages
  apt:
    name: 
      - openjdk-11-jdk
    state: present

- name: Download Hadoop
  get_url:
    url: "https://downloads.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz"
    dest: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
    mode: '0755'
    
- name: Create hadoop installer directory
  file:
    path: "{{ hadoop_install_dir }}"
    state: directory
    
- name: Extract Hadoop
  unarchive:
    src: "/tmp/hadoop-{{ hadoop_version }}.tar.gz"
    dest: "{{ hadoop_install_dir }}"
    remote_src: yes

- name: Create symbolic link for Hadoop
  file:
    src: "{{ hadoop_install_dir }}/hadoop-{{ hadoop_version }}"
    dest: "/usr/local/hadoop"
    state: link

- name: Set environment variables for Hadoop
  blockinfile:
    path: "/etc/profile.d/hadoop.sh"
    block: |
      export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      export HADOOP_HOME=/usr/local/hadoop
      export PATH=$PATH:$HADOOP_HOME/bin
      export PATH=$PATH:$HADOOP_HOME/sbin
      export HADOOP_MAPRED_HOME=$HADOOP_HOME
      export HADOOP_COMMON_HOME=$HADOOP_HOME
      export HADOOP_HDFS_HOME=$HADOOP_HOME
      export YARN_HOME=$HADOOP_HOME
    create: yes
    mode: "0755"  # Исправлен режим с 7055 на 0755
  notify:
    - restart hadoop datanode
    - restart hadoop nodemanager

- name: Source Hadoop environment
  shell: "source /etc/profile.d/hadoop.sh"
  args:
    executable: /bin/bash

- name: Set environment variables in /etc/environment
  lineinfile:
    path: /etc/environment
    line: "{{ item }}"
    state: present
  loop:
    - 'JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64'
    - 'HDFS_DATANODE_USER={{ ansible_user }}'
    - 'YARN_NODEMANAGER_USER={{ ansible_user }}'
  notify:
    - restart hadoop datanode
    - restart hadoop nodemanager

- name: Download local variables from /etc/environment
  shell: source /etc/environment
  args:
    executable: /bin/bash

- name: Copy Hadoop configuration files
  template:
    src: "{{ item.src }}"
    dest: "/usr/local/hadoop/etc/hadoop/{{ item.dest }}"
  loop:
    - { src: "core-site.xml.j2", dest: "core-site.xml" }
    - { src: "hdfs-site.xml.j2", dest: "hdfs-site.xml" }
  notify:
    - restart hadoop datanode
    - restart hadoop nodemanager